<template>
	<div>
		<!--搜索工具条-->
		<el-col :span="24" class="toolbar" >
			<el-form :inline="true" :model="filters">
				<el-form-item>
					<el-input v-model="filters.Fcno" placeholder="Fcno"></el-input>
  				</el-form-item>
  				<el-form-item>
					<el-input v-model="filters.ItemNo" placeholder="ItemNo"></el-input>
				</el-form-item>
					<el-form-item>
					<el-input v-model="filters.Model" placeholder="Model"></el-input>
				</el-form-item>
						<el-form-item>
					<el-input v-model="filters.SkuName" placeholder="SkuName"></el-input>
				</el-form-item>
				<el-form-item>
					<el-date-picker v-model="filters.searchCreateTime" type="daterange"align="right" unlink-panels
      					range-separator="至"start-placeholder="创建开始日期" end-placeholder="创建结束日期" value-format="yyyy-MM-dd"></el-date-picker>
				</el-form-item>
				<el-form-item>
					<el-button type="primary" v-on:click="getProductSkus">查询</el-button>
				</el-form-item>
				<el-form-item>
					<el-button type="primary" @click="handleAdd">新增</el-button>
				</el-form-item>
			</el-form>
		</el-col>
		<!--列表-->
		<el-table :data="users" highlight-current-row v-loading="listLoading" @selection-change="selsChange" style="width: 100%;" @sort-change="sortChange">
			<el-table-column type="selection" width="55"></el-table-column>
			<el-table-column label="操作" width="160">
				<template slot-scope="scope">
					<el-button size="small" @click="handleEdit(scope.$index, scope.row)">编辑</el-button>
					<el-button type="danger" size="small" @click="handleDel(scope.$index, scope.row)">删除</el-button>
				</template>
			</el-table-column>
			<el-table-column prop="mainImgUrl"  label="主图" min-width="120" sortable="custom" >
				<template slot-scope="scope">
					<img    v-bind:src="scope.row.mainImgUrl | imgfilter" class="m120">
				</template>
			</el-table-column>
			<el-table-column prop="fcno"   label="fcno" min-width="150" sortable="custom"></el-table-column>
			<el-table-column prop="itemNo" label="itemNo" min-width="120" sortable="custom"></el-table-column>
			<el-table-column prop="model"  label="model" min-width="120" sortable="custom"></el-table-column>
			<el-table-column prop="skuName" label="skuName" width="180" sortable="custom"></el-table-column>
			<el-table-column prop="listPrice" label="价格" width="180" sortable="custom"></el-table-column>
			<el-table-column prop="status" label="状态" min-width="180" sortable="custom"></el-table-column>
			<el-table-column prop="packageLength" label="长宽高" min-width="180" sortable="custom">
					<template slot-scope="scope">
							{{scope.row.packageLength}}*{{scope.row.packageWidth}}*{{scope.row.packageHeight}}
					</template>
			</el-table-column>
			<el-table-column prop="barcode" label="条码" min-width="100" sortable="custom"></el-table-column>
            <el-table-column prop="createTime" label="创建时间" min-width="180" sortable="custom"></el-table-column>
		</el-table>

		<!--分页工具条-->
		<el-col :span="24" class="toolbar">
			 <el-pagination   @size-change="handleSizeChange"  @current-change="handleCurrentChange":current-page="pager.currentPage":page-sizes="pagerSizes":page-size="pager.pageSize" layout="total, sizes, prev, pager, next, jumper" :total=total>
		    </el-pagination>
	   </el-col>
		<!--编辑界面-->
		<el-dialog title="编辑" :visible.sync="editFormVisible" :close-on-click-modal="false" width="50%">
			<el-form :model="editForm" label-width="120px" :rules="editFormRules" ref="editForm" >
				<el-form-item label="用户名 " prop="userName" >
					<span> {{editForm.userName}}</span>
				</el-form-item>	
				<el-form-item label="所属集团" prop="groupId">
					<el-select v-model="editForm.groupId" placeholder="请选择" @change="chooseCompanys" > 
				    	<el-option v-for="item in groupOptions" :key="item.id" :label="item.groupName" :value="item.id"></el-option>
  					</el-select>
				</el-form-item>
					<el-form-item label="所属公司" prop="companyIds" >
					 <el-select v-model="editForm.companyIds" placeholder="请选择" multiple >
				    	<el-option v-for="item in companyOptions" :key="item.id"  :label="item.companyName" :value="item.id"></el-option>
  					 </el-select>
				</el-form-item>
				<el-form-item label="角色名称 " prop="roleIds">
						<el-select v-model="editForm.roleIds" placeholder="请选择"  multiple >
				    	<el-option v-for="item in roleOptions" :key="item.id":label="item.roleName" :value="item.id"></el-option>
  					</el-select>
				</el-form-item>
				<el-form-item label="真实姓名 " prop="realName">
					<el-input type="text" placeholder="真实姓名 " v-model="editForm.realName" > </el-input>
				</el-form-item>
				<el-form-item label="手机号" prop="mobilePhone">
					<el-input type="text" placeholder="手机号 " v-model.number="editForm.mobilePhone" > </el-input>
				</el-form-item>
			</el-form>
			<div slot="footer" class="dialog-footer">
				<el-button @click.native="editFormVisible = false">取消</el-button>
				<el-button type="primary" @click.native="editSubmit" :loading="editLoading">提交</el-button>
			</div>
		</el-dialog>

		<!--新增界面-->
		<el-dialog title="新增" :visible.sync="addFormVisible" :close-on-click-modal="false">
			<el-form :model="addForm" label-width="120px" :rules="addFormRules" ref="addForm">
				<el-form-item label="主图 " prop="mainImgUrl">
					<el-upload class="upload-demo" ref="upload"
						show-file-list
					     action=""
					     :file-list="fileList"
                      :before-upload="beforeUpload"
					  :on-preview="handlePreview"
					  :on-success="setImgInfo"
					  :on-remove="handleRemove"
					  :auto-upload="false"
					  v-model="addForm.mainImgUrl">
				  <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
				  <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">上传到服务器</el-button>
				  <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
		   		   </el-upload>
				</el-form-item>	
				<el-form-item label="FCNO" prop="FCNO">
					<el-input type="text" placeholder="FCNO" v-model="addForm.FCNO" > </el-input>
				</el-form-item>
				<el-form-item label="itemNo" prop="itemNo">
					<el-input type="text" placeholder="itemNo" v-model="addForm.itemNo" > </el-input>
				</el-form-item>
				<el-form-item label="model" prop="model">
						<el-input type="text" placeholder="model" v-model="addForm.model" > </el-input>
					</el-form-item>
				<el-form-item label="skuName" prop="skuName">
						<el-input type="text" placeholder="skuName" v-model="addForm.skuName" > </el-input>
					</el-form-item>
					<el-form-item label="价格" prop="listPrice">
						<el-input type="text" placeholder="价格" v-model="addForm.listPrice" > </el-input>
					</el-form-item>
						<el-form-item label="长" prop="packageLength">
						<el-input type="text" placeholder="长" v-model="addForm.packageLength" > </el-input>
					</el-form-item>
					<el-form-item label="宽" prop="packageWidth">
						<el-input type="text" placeholder="宽" v-model="addForm.packageWidth" > </el-input>
					</el-form-item>
					<el-form-item label="高" prop="packageHeight">
						<el-input type="text" placeholder="高" v-model="addForm.packageHeight" > </el-input>
					</el-form-item>
					<el-form-item label="barcode" prop="barcode">
						<el-input type="text" placeholder="barcode" v-model="addForm.barcode" > </el-input>
					</el-form-item>
				</el-form>
			<div slot="footer" class="dialog-footer">
				<el-button @click.native="addFormVisible = false">取消</el-button>
				<el-button type="primary" @click.native="addSubmit" :loading="addLoading">提交</el-button>
			</div>
		</el-dialog>

	</div>
</template>
<script>
	export default {
		data() {
			var validateUser = (rule, value, callback) => {
				if(value===''){
		           callback(new Error('请输入用户名'));
		        } 
		         if  (value.length>12||value.length<6){
		        	  callback(new Error('用户名长度在6-12之间'));	
	         	 }
			     else {
				        this.$axios({
						    method: 'post',
						    url:'/product/productsku/list',
						    data:{ "userName": value},
						}).then((res)=>{
					         if(res.length>0){
					                callback(new Error('用户名已经存在'));	
					         }else{
					         	 callback()
					         }
						}).catch(function () {
              		  		callback(new Error('服务异常'))
            			})
			          }
		       
    		 };
			return {
				fileList:[],
				//搜索
				filters:{
					Fcno: '',
					ItemNo:'',
					Model:'',
					SkuName:'',
					searchCreateTime:[]
				},
				groupOptions:[],
				companyOptions:[],
				roleOptions:[],
				users: [],
				total: 0,
				pager:this.global_.pager,
				pagerSizes:this.global_.pagerSizes,
				listLoading: false,
				sels: [],//列表选中列
				editFormVisible: false,//编辑界面是否显示
				editLoading: false,
				//编辑界面数据
				editForm: {
				},
				addFormVisible: false,//新增界面是否显示
				addLoading: false,
				//新增-编辑界面验证
				addFormRules: {
					groupId: [
						{ required: true, message: '请选择所属集团', trigger: 'blur,change' }
					],
					companyIds:[
						{ required: true, message: '请选择所属公司', trigger: 'blur' }
					],
					roleIds:[
						{ required: true, message: '请选择角色', trigger: 'blur' }
					],
					userName:[
						{  required: true,  validator: validateUser, trigger: 'blur' }
					],
					realName:[
						{ required: true, message: '请输入真实姓名', trigger: 'blur' }
					],
					password:[
						 { required: true, message: '请输入密码', trigger: 'blur' },
						 { min: 6, max: 20, message: '密码长度6到12位', trigger: 'blur' }
					],
					mobilePhone:[{type:'number',required: true, message: '请输入手机号', trigger: 'blur' }]
				},
					editFormRules: {
					groupId: [
						{ required: true, message: '请选择所属集团', trigger: 'blur,change' }
					],
					companyIds:[
						{ required: true, message: '请选择所属公司', trigger: 'blur' }
					],
					roleIds:[
						{ required: true, message: '请选择角色', trigger: 'blur' }
					],
					realName:[
						{ required: true, message: '请输入真实姓名', trigger: 'blur' }
					],
					mobilePhone:[{type:'number',required: true, message: '请输入正确的手机号'}]
				},
				//新增界面数据
				addForm: {
					groupId:'',
					companyIds:[],
					roleIds:[],
					password:'',
					userName:'',
					realName:'',
					mobilePhone:'',
				}
			}
		},
		methods: {
			//上传文件
			
			beforeUpload (file) {
				const isJPG = file.type === 'image/jpg' || file.type === 'image/png';
                const isLt5M = file.size / 1024 / 1024 < 5;

                if (!isJPG) {
                    this.$message.error('只能上传 jpg/png 文件!');
                }
                if (!isLt5M) {
                    this.$message.error('上传分类图片大小不能超过 5MB!');
                }
               //  return isJPG && isLt5M;
		      let fd = new FormData()
		      fd.append('file', file)
		      fd.append('path', 'product/sku')
		      submitUpload(fd)
//		    	this.$axios({
//					    method: 'post',
//					    url:'/base/file/upload',
//					    data:fd,
//					}).then((res)=>{
//						//console.log("f"+this.fileList);
//					});
//		      return false
		    },
		   setImgInfo(response, file, fileList) {
		   	alert("1")
		   	debugger
		   	console.log(fileList)
        // 通过异步上传成功后，依据返回的参数组装 `mdImg` 图片路径等信息；
        // 点击`提交`按钮是保存包括图片信息的表单信息；
    		},
			submitUpload(fd) {
					this.$axios({
					    method: 'post',
					    url:'/base/file/upload',
					    data:fd,
					}).then((res)=>{
						//console.log("f"+this.fileList);
					});
				//alert("11")
		      //this.$refs.upload.submit();
		      },
		      handleRemove(file, fileList) {
		        console.log(file, fileList);
		      },
		      handlePreview(file) {
		        console.log("file"+file);
		      },
			formatGroupId(row,column){
				for(var i = 0 ;i < this.groupOptions.length;i++){
					if(this.groupOptions[i].id == row.groupId){
						return this.groupOptions[i].groupName;
					}
				}
			},
			handleCurrentChange(val) {
				this.pager.currentPage = val;
				this.getProductSkus();
			},
				handleSizeChange(val){
					this.pager.pageSize=val;
					this.getProductSkus();
				},
				sortChange(val){
					val.order == 'ascending' ? val.order='asc':val.order='desc';
					this.pager.sortType=val.order;
					this.pager.sortName=val.prop;
					this.getProductSkus();
				},
			//获取角色列表
			getProductSkus() {
				let para = {
					likeFcno:this.filters.Fcno,
					likeItemNo:this.filters.ItemNo,
					likeModel:this.filters.likeModel,
					likeSkuName:this.filters.SkuName,
					searchCreateTimeBegin:this.filters.searchCreateTime[0],
					searchCreateTimeEnd:this.filters.searchCreateTime[1],
				};
				this.listLoading = true;
					this.$axios({
					    method: 'post',
					    url:'/product/productsku/page',
					    params:this.pager,
					    data:para,
					}).then((res)=>{
						this.total = res.totalRows;
						this.users = res.rows;
						this.listLoading = false;
					});
			},
			//获取所属集团
			getGroup(){
					this.$axios({
					    method: 'post',
					    url:'/group/groupbase/list',
					    data:{},
					}).then((res)=>{
						this.groupOptions = res;
					});
			},
			chooseCompanys(val){
				   	this.companyOptions=[];
				   	this.addForm.companyIds=[];
				   	this.editForm.companyIds=[];
				   	this.roleOptions =[];
				   	this.addForm.roleIds=[],
				   		this.editForm.roleIds=[];
					this.$axios({
					    method: 'post',
					    url:'/group/groupcompany/list',
					    data:{
					    	searchGroupId:[val]
					    }
					}).then((res)=>{
						this.companyOptions = res;
					});
					this.$axios({
					    method: 'post',
					    url:'/system/systemrole/list',
					    data:{searchGroupId:[val]},
					}).then((res)=>{
						this.roleOptions = res;
					});
					
			},
			//删除
			handleDel(index, row){
				this.$confirm('确认删除该记录吗?', '提示', {
					type: 'warning'
				}).then(() => {
					this.listLoading = true;
						this.$axios({
								    method: 'post',
								    url:'/product/productsku/delete/'+row.id,
								}).then((res)=>{
										this.$message({
										message: '删除成功',
										duration:'1000',
										type: 'success'
										});
									this.getProductSkus();
								})
							}).catch(() => {
							});
			},
			//显示编辑界面
			handleEdit(index, row) {
				this.editFormVisible = true;
				this.$axios({
						    method: 'post',
						    url:'/product/productsku/get/'+row.id,
						}).then((res)=>{
							this.editForm.id=res.id;
							this.editForm.groupId=res.groupId;
							this.chooseCompanys(res.groupId);
							this.editForm.userName=res.userName;
						    for(let i=0;i<res.groupCompanys.length;i++){
						    	this.editForm.companyIds[i]=res.groupCompanys[i].id
						    }
						    for(let i=0;i<res.systemRoleList.length;i++){
						    	this.editForm.roleIds[i]=res.systemRoleList[i].id
						    }
						    this.editForm.realName=res.realName;
						      this.editForm.mobilePhone=res.mobilePhone*1;
				});
			},
			//编辑
			editSubmit () {
				this.$refs.editForm.validate((valid) => {
					if (valid) {
						this.$confirm('确认提交吗？', '提示', {}).then(() => {
							this.editLoading = true;
							//编辑用户时不能修改userName
							delete this.editForm['userName'];
							let para = Object.assign({}, this.editForm);
							let id=para.id;
							this.$axios({
							    method: 'post',
							    url:'/product/productsku/update/'+id,
							    data:para,
							}).then((res)=>{
								this.users = res.rows;
								this.editLoading = false;
								this.$message({
										message: '提交成功',
										type: 'success'
									});
								this.$refs['editForm'].resetFields();
								this.editFormVisible = false;
								this.getProductSkus();
							});
						});
					}
				});
			},
			//显示新增界面
			handleAdd () {
				this.addFormVisible = true;
				this.addForm = {
					groupId:'',
					companyIds:[],
					roleIds:[],
					password:'',
					userName:'',
					realName:'',
					mobilePhone:''
				};
			},
			//新增
			addSubmit() {
				this.$refs.addForm.validate((valid) => {
					if (valid) {
						this.$confirm('确认提交吗？', '提示', {}).then(() => {
							this.addLoading = true;
							let para = Object.assign({}, this.addForm);
								this.$axios({
							    method: 'post',
							    url:'/product/productsku/add',
							    data:para,
								}).then((res)=>{
								this.users = res.rows;
								this.listLoading = false;
								this.$message({
										message: '提交成功',
										type: 'success'
									});
									this.$refs['addForm'].resetFields();
									this.addFormVisible = false;
									this.getProductSkus();
							});
						});
					}
				});
			},
			selsChange (sels) {
				this.sels = sels;
			},
		},
		mounted() {
			
			this.getProductSkus();
			this.getGroup()
		}
	}

</script>

<style >
</style>